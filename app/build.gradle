plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}
apply from: "$rootDir/dependencies.gradle"

def versionMajor = 2
def versionMinor = 7
def versionPatch = 3
def versionTemp = 8

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.development.hiltpractices"
        minSdk 23
        targetSdk 32
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10 + versionTemp
        resConfigs "en", "vi"
        archivesBaseName = "${versionMajor}.${versionMinor}.${versionPatch}.(${versionTemp})"

        def secret = loadProperties("secret.properties")

        buildConfigField "String", "API_KEY", secret['API_KEY']
        manifestPlaceholders = [apiKey: secret['API_KEY']]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"

    productFlavors {

        def loadEnv = { target, envPath ->
            def envProperties = loadProperties(envPath)

            target.buildConfigField("String", "APP_BASE_URL",
                    envProperties['APP_BASE_URL'])
            target.buildConfigField("String", "APP_CLIENT_ID",
                    envProperties['APP_CLIENT_ID'])
            target.buildConfigField("String", "APP_SECRET_KEY",
                    envProperties['APP_SECRET_KEY'])
            target.buildConfigField("String", "URL_CONNECT_SOCKET_BASIC",
                    envProperties['URL_CONNECT_SOCKET_BASIC'])
            target.buildConfigField("String", "URL_BASIC_CHAT_BOT",
                    envProperties['URL_BASIC_CHAT_BOT'])
            target.buildConfigField("String", "URL_BASIC_RATING",
                    envProperties['URL_BASIC_RATING'])
            target.buildConfigField("String", "NOTIFICATION_BASE_URL",
                    envProperties['NOTIFICATION_BASE_URL'])
        }

        dev {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.(${versionTemp})"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue("string", "app_name", "DEV")
            buildConfigField("boolean", "SHAKE_LOG", "true")
            loadEnv(owner, "env/dev.properties")
        }

        uat {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.(${versionTemp})"
            applicationIdSuffix ".uat"
            versionNameSuffix "-uat"
            resValue("string", "app_name", "UAT")
            buildConfigField("boolean", "SHAKE_LOG", "true")
            loadEnv(owner, "env/uat.properties")
        }

        staging {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.(${versionTemp})"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            resValue("string", "app_name", "Staging")
            buildConfigField("boolean", "SHAKE_LOG", "true")
            loadEnv(owner, "env/staging.properties")
        }

        product {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            resValue("string", "app_name", "APP")
            buildConfigField("boolean", "SHAKE_LOG", "false")
            loadEnv(owner, "env/product.properties")
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            ext.enableCrashlytics = false
/*            FirebasePerformance {
                instrumentationEnabled false
            }*/
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"

    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "androidx.hilt:hilt-work:$hiltWorkVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltWorkVersion"

    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-paging:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$moshiConverterVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    implementation "androidx.startup:startup-runtime:$startupVersion"

    implementation "androidx.legacy:legacy-support-v4:$legacyVersion"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    implementation "com.google.code.gson:gson:2.9.0"

    // For test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

kapt {
    correctErrorTypes true
}

def loadProperties(filename) {
    def propertiesFile = rootProject.file(filename)
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))

    return properties
}

@SuppressWarnings('unused')
def findPropertyByKey(key) {
    return project.findProperty(key)
}